/**
 * SendX API
 * SendX is built on the simple tenet that users must have open access to their data. SendX API is the first step in that direction. To cite some examples:   - subscribe / unsubscribe a contact from a list   - Schedule campaign to a segment of users   - Trigger transactional emails   - Get / PUT / POST and DELETE operations on team, campaign, list, contact, report etc. and so on.  As companies grow big, custom use cases around email marketing also crop up. SendX API ensures   that SendX platform is able to satisfy such unforeseen use cases. They may range from building     custom reporting dashboard to tagging contacts with custom attributes or triggering emails based on recommendation algorithm.  We do our best to have all our URLs be [RESTful](http://en.wikipedia.org/wiki/Representational_state_transfer). Every endpoint (URL) may support one of four different http verbs. GET requests fetch information about an object, POST requests create objects, PUT requests update objects, and finally DELETE requests will delete objects.  Also all API calls besides:   - Subscribe / unsubscribe signup form  required **api_key** to be passed as **header**   ### The Envelope Every response is contained by an envelope. That is, each response has a predictable set of keys with which you can expect to interact: ```json {     \"status\": \"200\",      \"message\": \"OK\",     \"data\"\": [        {          ...        },        .        .        .     ] } ```  #### Status  The status key is used to communicate extra information about the response to the developer. If all goes well, you'll only ever see a code key with value 200. However, sometimes things go wrong, and in that case you might see a response like: ```json {     \"status\": \"404\" } ```  #### Data  The data key is the meat of the response. It may be a list containing single object or multiple objects  #### Message  This returns back human readable message. This is specially useful to make sense in case of error scenarios. 
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SendXApi) {
      root.SendXApi = {};
    }
    root.SendXApi.ListAddUpdate = factory(root.SendXApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ListAddUpdate model module.
   * @module model/ListAddUpdate
   * @version v1
   */

  /**
   * Constructs a new <code>ListAddUpdate</code>.
   * @alias module:model/ListAddUpdate
   * @class
   */
  var exports = function() {
    var _this = this;
























  };

  /**
   * Constructs a <code>ListAddUpdate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ListAddUpdate} obj Optional instance to populate.
   * @return {module:model/ListAddUpdate} The populated <code>ListAddUpdate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('encryptedId')) {
        obj['encryptedId'] = ApiClient.convertToType(data['encryptedId'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'Integer');
      }
      if (data.hasOwnProperty('thankyou_from_email')) {
        obj['thankyou_from_email'] = ApiClient.convertToType(data['thankyou_from_email'], 'String');
      }
      if (data.hasOwnProperty('thankyouMailSubject')) {
        obj['thankyouMailSubject'] = ApiClient.convertToType(data['thankyouMailSubject'], 'String');
      }
      if (data.hasOwnProperty('thankyouMailMessage')) {
        obj['thankyouMailMessage'] = ApiClient.convertToType(data['thankyouMailMessage'], 'String');
      }
      if (data.hasOwnProperty('confirm_from_email')) {
        obj['confirm_from_email'] = ApiClient.convertToType(data['confirm_from_email'], 'String');
      }
      if (data.hasOwnProperty('confirmMailSubject')) {
        obj['confirmMailSubject'] = ApiClient.convertToType(data['confirmMailSubject'], 'String');
      }
      if (data.hasOwnProperty('confirmMailMessage')) {
        obj['confirmMailMessage'] = ApiClient.convertToType(data['confirmMailMessage'], 'String');
      }
      if (data.hasOwnProperty('goodbye_from_email')) {
        obj['goodbye_from_email'] = ApiClient.convertToType(data['goodbye_from_email'], 'String');
      }
      if (data.hasOwnProperty('goodbyeMailSubject')) {
        obj['goodbyeMailSubject'] = ApiClient.convertToType(data['goodbyeMailSubject'], 'String');
      }
      if (data.hasOwnProperty('goodbyeMailMessage')) {
        obj['goodbyeMailMessage'] = ApiClient.convertToType(data['goodbyeMailMessage'], 'String');
      }
      if (data.hasOwnProperty('sendThankYouMail')) {
        obj['sendThankYouMail'] = ApiClient.convertToType(data['sendThankYouMail'], 'Boolean');
      }
      if (data.hasOwnProperty('sendConfirmUnsubscribeMail')) {
        obj['sendConfirmUnsubscribeMail'] = ApiClient.convertToType(data['sendConfirmUnsubscribeMail'], 'Boolean');
      }
      if (data.hasOwnProperty('subscribeSuccessPage')) {
        obj['subscribeSuccessPage'] = ApiClient.convertToType(data['subscribeSuccessPage'], 'String');
      }
      if (data.hasOwnProperty('confirmSuccessPage')) {
        obj['confirmSuccessPage'] = ApiClient.convertToType(data['confirmSuccessPage'], 'String');
      }
      if (data.hasOwnProperty('unsubscribeSuccessPage')) {
        obj['unsubscribeSuccessPage'] = ApiClient.convertToType(data['unsubscribeSuccessPage'], 'String');
      }
      if (data.hasOwnProperty('team_id')) {
        obj['team_id'] = ApiClient.convertToType(data['team_id'], 'Integer');
      }
      if (data.hasOwnProperty('subscribed')) {
        obj['subscribed'] = ApiClient.convertToType(data['subscribed'], 'Integer');
      }
      if (data.hasOwnProperty('confirmed')) {
        obj['confirmed'] = ApiClient.convertToType(data['confirmed'], 'Integer');
      }
      if (data.hasOwnProperty('unsubscribed')) {
        obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Integer');
      }
      if (data.hasOwnProperty('bounced')) {
        obj['bounced'] = ApiClient.convertToType(data['bounced'], 'Integer');
      }
      if (data.hasOwnProperty('marked_spam')) {
        obj['marked_spam'] = ApiClient.convertToType(data['marked_spam'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * @member {String} encryptedId
   */
  exports.prototype['encryptedId'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Integer} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {String} thankyou_from_email
   */
  exports.prototype['thankyou_from_email'] = undefined;
  /**
   * @member {String} thankyouMailSubject
   */
  exports.prototype['thankyouMailSubject'] = undefined;
  /**
   * @member {String} thankyouMailMessage
   */
  exports.prototype['thankyouMailMessage'] = undefined;
  /**
   * @member {String} confirm_from_email
   */
  exports.prototype['confirm_from_email'] = undefined;
  /**
   * @member {String} confirmMailSubject
   */
  exports.prototype['confirmMailSubject'] = undefined;
  /**
   * @member {String} confirmMailMessage
   */
  exports.prototype['confirmMailMessage'] = undefined;
  /**
   * @member {String} goodbye_from_email
   */
  exports.prototype['goodbye_from_email'] = undefined;
  /**
   * @member {String} goodbyeMailSubject
   */
  exports.prototype['goodbyeMailSubject'] = undefined;
  /**
   * @member {String} goodbyeMailMessage
   */
  exports.prototype['goodbyeMailMessage'] = undefined;
  /**
   * @member {Boolean} sendThankYouMail
   */
  exports.prototype['sendThankYouMail'] = undefined;
  /**
   * @member {Boolean} sendConfirmUnsubscribeMail
   */
  exports.prototype['sendConfirmUnsubscribeMail'] = undefined;
  /**
   * @member {String} subscribeSuccessPage
   */
  exports.prototype['subscribeSuccessPage'] = undefined;
  /**
   * @member {String} confirmSuccessPage
   */
  exports.prototype['confirmSuccessPage'] = undefined;
  /**
   * @member {String} unsubscribeSuccessPage
   */
  exports.prototype['unsubscribeSuccessPage'] = undefined;
  /**
   * @member {Integer} team_id
   */
  exports.prototype['team_id'] = undefined;
  /**
   * @member {Integer} subscribed
   */
  exports.prototype['subscribed'] = undefined;
  /**
   * @member {Integer} confirmed
   */
  exports.prototype['confirmed'] = undefined;
  /**
   * @member {Integer} unsubscribed
   */
  exports.prototype['unsubscribed'] = undefined;
  /**
   * @member {Integer} bounced
   */
  exports.prototype['bounced'] = undefined;
  /**
   * @member {Integer} marked_spam
   */
  exports.prototype['marked_spam'] = undefined;



  return exports;
}));


